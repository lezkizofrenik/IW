<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>es.uca.iw</groupId>
	<artifactId>costavespertino</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>costavespertino</name>
	<description>Costa vespertino</description>
	<repositories>

		<repository>
			<id>vaadin-addons</id>
			<url>https://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>
	<properties>
		<java.version>1.8</java.version>
		<vaadin.version>14.0.13</vaadin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-board-flow</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.appreciated</groupId>
			<artifactId>card</artifactId>
			<version>2.0.0.beta4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-charts-flow</artifactId>
		</dependency>
			<dependency>
					<groupId>org.vaadin.gatanaso</groupId>
					<artifactId>multiselect-combo-box-flow</artifactId>
					<version>2.3.0</version>
				 </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.5.0-b01</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>5.2.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>5.2.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>5.2.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-crypto</artifactId>
    		<version>5.2.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- Clean build and startup time for Vaadin apps sometimes may exceed
                     the default Spring Boot's 30sec timeout.  -->
				<configuration>
					<wait>500</wait>
					<maxAttempts>240</maxAttempts>
				</configuration>
			</plugin>

			<!--
                Take care of synchronizing java dependencies and imports in
                package.json and main.js files.
                It also creates webpack.config.js if not exists yet.
            -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-frontend</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
	<profile>
		<!-- Production mode is activated using -Pproduction -->
		<id>production</id>
		<properties>
			<vaadin.productionMode>true</vaadin.productionMode>
		</properties>

		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>flow-server-production-mode</artifactId>
			</dependency>
		</dependencies>

		<build>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<jvmArguments>-Dvaadin.productionMode</jvmArguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>build-frontend</goal>
							</goals>
							<phase>compile</phase>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</build>
	</profile>

	<profile>
	<id>integration-tests</id>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>start-spring-boot</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-spring-boot</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Runs the integration tests (*IT) after the server is started -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
					<enableAssertions>true</enableAssertions>
					<systemPropertyVariables>
						<!-- Pass location of downloaded webdrivers to the tests -->
						<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.lazerycode.selenium</groupId>
				<artifactId>driver-binary-downloader-maven-plugin</artifactId>
				<version>1.0.17</version>
				<configuration>
					<onlyGetDriversForHostOperatingSystem>true
					</onlyGetDriversForHostOperatingSystem>
					<rootStandaloneServerDirectory>
						${project.basedir}/drivers/driver
					</rootStandaloneServerDirectory>
					<downloadedZipFileDirectory>
						${project.basedir}/drivers/driver_zips
					</downloadedZipFileDirectory>
					<customRepositoryMap>
						${project.basedir}/drivers.xml
					</customRepositoryMap>
				</configuration>
				<executions>
					<execution>
						<!-- use phase "none" to skip download step -->
						<phase>${drivers.downloader.phase}</phase>
						<goals>
							<goal>selenium</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	</profile>
</profiles>
</project>
